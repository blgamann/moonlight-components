{"version":3,"sources":["../components/button.tsx","../components/item.tsx","../components/tabs.tsx","../components/index-bar.tsx","../components/book.tsx","../components/profile.tsx","../components/soulline.tsx","../components/answer.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Moon } from \"lucide-react\";\n\nexport function Button({ children }: { children: React.ReactNode }) {\n  return (\n    <button className=\"bg-[#1A9FA5] hover:bg-[#28B6C1] text-white px-4 py-2 text-sm rounded-md transition-colors hover:cursor-pointer\">\n      {children}\n    </button>\n  );\n}\n\nexport function ButtonDeep() {\n  const scale = 1.2;\n\n  const [active, setActive] = useState(false);\n  const [holding, setHolding] = useState(false);\n  const timeoutRef = useRef<number>();\n  const controls = useAnimation();\n\n  // Base sizes\n  const BASE_CONTAINER = 56;\n  const BASE_WRAPPER = 48;\n  const BASE_ICON = 24;\n  const STROKE = 3;\n\n  // Scaled\n  const containerSize = BASE_CONTAINER * scale;\n  const wrapperSize = BASE_WRAPPER * scale;\n  const iconSize = BASE_ICON * scale;\n  const R = wrapperSize / 2;\n  const C = 2 * Math.PI * R;\n  const center = containerSize / 2;\n\n  // Long press handlers\n  function handlePointerDown() {\n    if (active) return;\n    setHolding(true);\n    timeoutRef.current = window.setTimeout(() => {\n      setActive(true);\n      setHolding(false);\n    }, 2000);\n  }\n  function handlePointerUp() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n    setHolding(false);\n  }\n\n  // One-time scale pulse on activation\n  useEffect(() => {\n    if (active) {\n      controls.start({\n        scale: [1, 1.1, 1],\n        transition: { duration: 0.6, ease: \"easeOut\" },\n      });\n    }\n  }, [active, controls]);\n\n  return (\n    <div\n      className=\"relative flex items-center justify-center cursor-pointer\"\n      style={{ width: containerSize, height: containerSize }}\n      onPointerDown={handlePointerDown}\n      onPointerUp={handlePointerUp}\n      onPointerLeave={handlePointerUp}\n    >\n      {/* Static border */}\n      <svg\n        width={containerSize}\n        height={containerSize}\n        className=\"absolute top-0 left-0\"\n      >\n        <circle\n          cx={center}\n          cy={center}\n          r={R}\n          stroke=\"#24d3ee\"\n          strokeWidth={STROKE}\n          fill=\"transparent\"\n          opacity={0.3}\n        />\n        {/* Progress arc on long press */}\n        {!active && (\n          <motion.circle\n            cx={center}\n            cy={center}\n            r={R}\n            stroke=\"#24d3ee\"\n            strokeWidth={STROKE}\n            fill=\"transparent\"\n            strokeDasharray={C}\n            strokeDashoffset={C}\n            transform={`rotate(-90 ${center} ${center})`}\n            animate={{ strokeDashoffset: holding ? 0 : C }}\n            transition={{ duration: 2, ease: \"linear\" }}\n          />\n        )}\n      </svg>\n\n      {/* Icon wrapper with completion pulse */}\n      <motion.div\n        className={`rounded-full flex items-center justify-center transition-colors duration-200\n          ${\n            active\n              ? \"bg-gradient-to-tr from-[#24d3ee] to-[#24d3ee] shadow-[0_0_10px_0_rgba(0,255,255,0.7)]\"\n              : \"bg-transparent\"\n          }`}\n        style={{ width: wrapperSize, height: wrapperSize }}\n        animate={controls}\n      >\n        <Moon size={iconSize} color={active ? \"#fff\" : \"#24d3ee\"} />\n      </motion.div>\n    </div>\n  );\n}\n","// components/SoulLinkItem.tsx\nimport Image from \"next/image\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { ko } from \"date-fns/locale\";\nimport React from \"react\";\n\nexport interface ItemProps {\n  imageUrl: string;\n  name: string;\n  requestDate?: Date;\n  actions?: React.ReactNode;\n}\n\nexport function Item({ imageUrl, name, requestDate, actions }: ItemProps) {\n  const timeElapsedText = requestDate\n    ? formatDistanceToNow(requestDate, { addSuffix: true, locale: ko })\n    : \"\";\n\n  return (\n    <div className=\"flex items-center justify-between p-4 bg-white/5 rounded-md border border-white/15\">\n      {/* 프로필 + 텍스트 */}\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"w-12 h-12 relative flex-shrink-0\">\n          <Image\n            src={imageUrl}\n            alt={name}\n            fill\n            className=\"rounded-full object-cover\"\n            unoptimized\n          />\n        </div>\n        <div>\n          <p className=\"text-base text-white/95\">{name}님과의 소울링크</p>\n          {requestDate && (\n            <p className=\"text-sm text-white/65\">{timeElapsedText}</p>\n          )}\n        </div>\n      </div>\n\n      {/* 액션 버튼 등 */}\n      {actions && <div className=\"flex items-center space-x-2\">{actions}</div>}\n    </div>\n  );\n}\n","import { useState, ReactNode } from \"react\";\n\ntype TabItem = {\n  label: string;\n  value: string;\n  content: ReactNode;\n};\n\nexport default function Tabs({ tabs }: { tabs: TabItem[] }) {\n  const [active, setActive] = useState(tabs[0].value);\n\n  return (\n    <div className=\"max-w-[680px] mx-auto p-6\">\n      <div className=\"flex border-b border-white/15 mb-6\">\n        {tabs.map((tab) => (\n          <button\n            key={tab.value}\n            onClick={() => setActive(tab.value)}\n            className={`\n              py-2 px-4 text-base font-medium transition-colors\n              ${\n                active === tab.value\n                  ? \"border-b-2 border-white/95 text-white/95\"\n                  : \"text-white/60 hover:text-white/95\"\n              }\n            `}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      <div>\n        {tabs.map((tab) =>\n          tab.value === active ? <div key={tab.value}>{tab.content}</div> : null\n        )}\n      </div>\n    </div>\n  );\n}\n","import { MoveLeft, MoveRight } from \"lucide-react\";\nimport { BookSm, BookSmProps } from \"./book\";\nimport { ProfileSmIndex, ProfileBaseProps as ProfileSmProps } from \"./profile\";\nimport { ButtonDeep } from \"./button\";\n\nexport function IndexBack({ back }: { back?: string }) {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <MoveLeft className=\"text-white/60\" />\n      {back && (\n        <span className=\"text-white/60 text-base cursor-pointer hover:underline\">\n          {back}\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport function IndexForward({ forward }: { forward?: string }) {\n  return (\n    <div className=\"flex items-center gap-2\">\n      {forward && (\n        <span className=\"text-white/60 text-base cursor-pointer hover:underline\">\n          {forward}\n        </span>\n      )}\n      <MoveRight className=\"text-white/60\" />\n    </div>\n  );\n}\n\nexport function IndexTop({ profile }: { profile: ProfileSmProps }) {\n  return (\n    <div className=\"flex justify-between items-center border-b border-white/15 px-6 py-4 h-18\">\n      <div className=\"text-white/60 text-base\">2024년 04월 26일</div>\n      {profile && <ProfileSmIndex {...profile} />}\n    </div>\n  );\n}\n\nexport function IndexTopBack({\n  back,\n  title,\n  book,\n  profile,\n  totalPages,\n  currentPage,\n}: {\n  back?: string;\n  title: string;\n  book?: BookSmProps;\n  profile?: ProfileSmProps;\n  totalPages?: number;\n  currentPage?: number;\n}) {\n  if (book && profile) {\n    throw new Error(\"book과 profile은 동시에 존재할 수 없습니다.\");\n  }\n\n  return (\n    <div className=\"relative flex items-center border-b border-white/15 px-6 py-4 h-18\">\n      {/* 좌측 */}\n      <IndexBack back={back} />\n\n      <div\n        className=\"\n          absolute\n          left-1/2 top-1/2\n          -translate-x-1/2 -translate-y-1/2\n          min-w-[180px]\n          max-w-[60%]\"\n      >\n        <div\n          className=\"\n          text-center\n          whitespace-nowrap\n          overflow-hidden\n          text-ellipsis\n          text-white/95\n          text-lg font-['NanumMyeongjo']\n        \"\n        >\n          {title}\n        </div>\n        {totalPages && currentPage && (\n          <div className=\"text-center text-white/40 text-sm tracking-widest mt-[-2px]\">\n            {currentPage}/{totalPages}\n          </div>\n        )}\n      </div>\n\n      {/* 우측 (절대 위치) */}\n      {(book || profile) && (\n        <div className=\"absolute right-6 top-1/2 -translate-y-1/2 flex items-center h-full overflow-hidden\">\n          {book && (\n            // 높이를 컨테이너에 맞추기 위해 h-full 추가\n            <div className=\"h-full flex flex-col items-center justify-center\">\n              <BookSm {...book} />\n            </div>\n          )}\n          {profile && <ProfileSmIndex {...profile} />}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function IndexBottom({\n  back,\n  forward,\n}: {\n  back?: string;\n  forward?: string;\n}) {\n  return (\n    <div className=\"flex justify-between items-center border-t border-white/15 px-6 py-4 h-18\">\n      <IndexBack back={back} />\n      <IndexForward forward={forward} />\n    </div>\n  );\n}\n\nexport function IndexBottomButton({\n  back,\n  forward,\n}: {\n  back?: string;\n  forward?: string;\n}) {\n  return (\n    <div className=\"flex justify-between items-center border-t border-white/15 px-6 py-4 h-20\">\n      <IndexBack back={back} />\n      <ButtonDeep />\n      <IndexForward forward={forward} />\n    </div>\n  );\n}\n","import Image from \"next/image\";\nimport Link from \"next/link\";\n\n// Props for BookSm\nexport interface BookSmProps {\n  title: string;\n  imageUrl: string;\n  altText?: string;\n}\n\n// Props for BookLg\ninterface BookLgProps {\n  imageUrl: string;\n  title: string;\n  altText?: string;\n}\n\n// Props for BookMd\ninterface BookMdProps {\n  imageUrl: string;\n  answerTitle: string;\n  answerText: string;\n  altText?: string;\n}\n\n// Props for BookMdQuestion\ninterface BookMdQuestionProps {\n  imageUrl: string;\n  title: string;\n  question: string;\n  altText?: string;\n}\n\n// Props for BookMdMeta\ninterface BookMdMetaProps {\n  imageUrl: string;\n  title: string;\n  author: string;\n  publisher: string;\n  publicationDate: string; // Or Date object\n  altText?: string;\n}\n\n// 1. BookSm: Displays only the book cover\nexport function BookSm({ title, imageUrl, altText }: BookSmProps) {\n  return (\n    <div className=\"\">\n      <Image\n        src={imageUrl}\n        alt={altText ?? `${title} book cover`}\n        width={24}\n        height={50}\n        className=\"object-cover shadow-md\"\n      />\n    </div>\n  );\n}\n\n// 2. Updated BookMdQuestion: Displays cover, title (linked), and a question based on snippet\nexport function BookMdQuestion({\n  imageUrl,\n  title,\n  question,\n  altText,\n}: BookMdQuestionProps) {\n  const bookSlug = title.toLowerCase().replace(/\\s+/g, \"-\");\n\n  return (\n    <div className=\"flex items-center space-x-4 border-b border-t border-white/15 py-8\">\n      <div className=\"flex-shrink-0\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `${title} cover`}\n          width={55}\n          height={90}\n          className=\"object-cover\"\n        />\n      </div>\n      <div className=\"flex flex-col flex-grow min-w-0\">\n        <Link href={`/book/${bookSlug}`} legacyBehavior>\n          <a className=\"text-base text-white/60 hover:underline mb-1\">\n            {title}\n          </a>\n        </Link>\n        <p className=\"text-lg mt-1 text-white/95 line-clamp-2\">{question}</p>\n      </div>\n    </div>\n  );\n}\n\nexport function BookMdAnswer({\n  imageUrl,\n  answerTitle,\n  answerText,\n  altText,\n}: BookMdProps) {\n  return (\n    <div className=\"flex space-x-4 items-center\">\n      <div className=\"flex-shrink-0\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `${answerTitle} cover`}\n          width={55}\n          height={90}\n          className=\"object-cover\"\n        />\n      </div>\n      <div className=\"flex flex-col flex-1 overflow-hidden mt-1\">\n        <Link href=\"/profile/answer/detail\">\n          <span className=\"text-xl font-semibold text-white/95 cursor-pointer hover:underline\">\n            {answerTitle}\n          </span>\n        </Link>\n        <p className=\"text-base text-white/60 mt-1.5 line-clamp-2\">\n          {answerText}\n        </p>\n      </div>\n    </div>\n  );\n}\n\n// 3. Updated BookMdMeta based on search result snippet\nexport function BookMdMeta({\n  imageUrl,\n  title,\n  author,\n  publisher,\n  publicationDate, // Expects YYYYMMDD format for formatting logic\n  altText,\n}: BookMdMetaProps) {\n  // Format date YYYYMMDD to YYYY. MM. DD.\n  const formatDate = (dateStr: string) => {\n    if (dateStr && dateStr.length === 8) {\n      return `${dateStr.substring(0, 4)}. ${dateStr.substring(\n        4,\n        6\n      )}. ${dateStr.substring(6, 8)}.`;\n    }\n    return dateStr; // Fallback if format is unexpected\n  };\n\n  const formattedDate = formatDate(publicationDate);\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <div className=\"flex-shrink-0\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `Cover of ${title}`}\n          width={55} // Consistent with BookMdQuestion\n          height={90} // Consistent with BookMdQuestion\n          className=\"object-cover\"\n          unoptimized // Added from snippet, useful for external images\n        />\n      </div>\n      {/* Adjusted text container height to match image */}\n      <div className=\"flex-grow flex flex-col justify-center\">\n        <Link href={`/book`} passHref legacyBehavior>\n          <a className=\"text-lg font-semibold text-white/95 hover:underline mb-1\">\n            {title}\n          </a>\n        </Link>\n        <p className=\"text-sm mt-1\">\n          <span className=\"text-white/40\">저자</span>{\" \"}\n          <span className=\"text-white/60\">{author}</span>\n        </p>\n        <p className=\"text-sm mt-1\">\n          <span className=\"text-white/40\">출판</span>{\" \"}\n          <span className=\"text-white/60\">\n            {publisher} · {formattedDate}\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\n// 4. BookLg: Displays book cover and title\nexport function BookLg({ imageUrl, title, altText }: BookLgProps) {\n  return (\n    <div className=\"flex flex-col items-center space-y-2\">\n      <Image\n        src={imageUrl}\n        alt={altText ?? `${title} book cover`}\n        width={100}\n        height={150}\n        className=\"object-cover shadow-md\"\n      />\n      <span className=\"text-base text-white/95 text-center cursor-pointer hover:underline line-clamp-2\">\n        {title}\n      </span>\n    </div>\n  );\n}\n\n// 4. BookLg: Displays book cover and title\nexport function BookLgBordered({ imageUrl, title, altText }: BookLgProps) {\n  return (\n    <div className=\"flex flex-col items-center space-y-2\">\n      {/* Apply border directly around the Image with explicit width/height */}\n      <div className=\"p-1 bg-cyan-400 shadow-[0_0_10px_0_rgba(0,255,255,0.7)]\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `${title} book cover`}\n          width={100} // Use explicit width\n          height={150} // Use explicit height\n          className=\"object-cover\" // Apply rounding to the image itself\n        />\n      </div>\n      <span className=\"text-base text-white/95 text-center cursor-pointer hover:underline line-clamp-2\">\n        {title}\n      </span>\n    </div>\n  );\n}\n\nexport function BookXl({ imageUrl, title, altText }: BookLgProps) {\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <Image\n        src={imageUrl}\n        alt={altText ?? `${title} book cover`}\n        width={150}\n        height={240}\n        className=\"object-cover shadow-md\"\n      />\n      <span className=\"text-xl font-['Nanum_Gothic'] text-white/95\">\n        {title}\n      </span>\n    </div>\n  );\n}\n","import Image from \"next/image\";\nimport Link from \"next/link\";\n\n// Props for ProfileSm and ProfileMd\nexport interface ProfileBaseProps {\n  imageUrl: string;\n  name: string;\n  altText?: string; // Optional alt text, defaults to name's profile picture\n}\n\n// Props for ProfileLg, extends base props with bio\ninterface ProfileLgProps extends ProfileBaseProps {\n  bio: string;\n}\n\n// Props for ProfileSmAnswer, extends base props with answerText\ninterface ProfileSmAnswerProps extends ProfileBaseProps {\n  answerTitle: string;\n  answerText: string;\n}\n\n// Small Profile Component\nexport function ProfileSm({ imageUrl, name, altText }: ProfileBaseProps) {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <div className=\"relative w-6 h-6\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `${name}'s profile picture`}\n          fill={true}\n          className=\"rounded-full object-cover\"\n        />\n      </div>\n      <span className=\"text-sm text-white/95 cursor-pointer hover:underline\">\n        {name}\n      </span>\n    </div>\n  );\n}\n\nexport function ProfileSmIndex({ imageUrl, name, altText }: ProfileBaseProps) {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <div className=\"relative w-6 h-6\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `${name}'s profile picture`}\n          fill={true}\n          className=\"rounded-full object-cover\"\n        />\n      </div>\n      <span className=\"text-sm text-white/60\">{name}</span>\n    </div>\n  );\n}\n\n// Small Profile Component with Answer\nexport function ProfileSmAnswer({\n  imageUrl,\n  name,\n  altText,\n  answerTitle,\n  answerText,\n}: ProfileSmAnswerProps) {\n  return (\n    <div className=\"flex flex-col\">\n      <ProfileSm imageUrl={imageUrl} name={name} altText={altText} />\n      <div className=\"flex flex-col flex-1 overflow-hidden mt-5\">\n        <Link href=\"/profile/answer/detail\">\n          <span className=\"text-xl font-semibold text-white/95 cursor-pointer hover:underline\">\n            {answerTitle}\n          </span>\n        </Link>\n        <p className=\"text-base text-white/60 mt-1.5 line-clamp-2\">\n          {answerText}\n        </p>\n      </div>\n    </div>\n  );\n}\n\n// Medium Profile Component\nexport function ProfileMd({ imageUrl, name, altText }: ProfileBaseProps) {\n  return (\n    <div className=\"flex flex-col items-center space-y-3\">\n      <div className=\"relative w-16 h-16\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `${name}'s profile picture`}\n          fill={true}\n          className=\"rounded-full object-cover\"\n        />\n      </div>\n      <span className=\"text-lg text-white/95 mt-2 text-center cursor-pointer hover:underline\">\n        {name}\n      </span>\n    </div>\n  );\n}\n\n// Medium Profile Component with Border\nexport function ProfileMdBordered({\n  imageUrl,\n  name,\n  altText,\n}: ProfileBaseProps) {\n  return (\n    <div className=\"flex flex-col items-center space-y-3\">\n      <div className=\"relative w-18 h-18 p-1 rounded-full bg-cyan-400 shadow-[0_0_10px_0_rgba(0,255,255,0.7)]\">\n        <div className=\"relative w-16 h-16\">\n          <Image\n            src={imageUrl}\n            alt={altText ?? `${name}'s profile picture`}\n            fill={true}\n            className=\"rounded-full object-cover\"\n          />\n        </div>\n      </div>\n      <span className=\"text-lg text-white/95 mt-2 text-center cursor-pointer hover:underline\">\n        {name}\n      </span>\n    </div>\n  );\n}\n\n// Large Profile Component\nexport function ProfileLg({ imageUrl, name, bio, altText }: ProfileLgProps) {\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"relative w-32 h-32 mb-4\">\n        <Image\n          src={imageUrl}\n          alt={altText ?? `${name}'s profile picture`}\n          fill={true}\n          className=\"rounded-full object-cover\"\n        />\n      </div>\n      <span className=\"text-2xl text-white/95 cursor-pointer font-semibold hover:underline mb-4\">\n        {name}\n      </span>\n      <p className=\"text-xl text-white/60 font-['NanumMyeongjo'] w-[400px]\">\n        {bio}\n      </p>\n    </div>\n  );\n}\n","// components/soulline.tsx\n\"use client\";\n\nimport React from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\n// --- Profile 타입 정의 ---\nexport interface SoulProfileProps {\n  imageUrl: string;\n  name: string;\n  altText?: string;\n}\n\nconst Soulline: React.FC<{ profiles: SoulProfileProps[] }> = ({ profiles }) => {\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      {/* 이미지 + 선 */}\n      <div className=\"flex items-center w-full h-16\">\n        {profiles.map((profile, idx) => (\n          <React.Fragment key={profile.name}>\n            {/* 아바타 크기: 64px */}\n            <div className=\"relative w-16 h-16 flex-shrink-0\">\n              <Image\n                src={profile.imageUrl}\n                alt={profile.altText ?? `${profile.name}'s profile picture`}\n                fill\n                className=\"rounded-full object-cover\"\n              />\n            </div>\n            {/* 마지막이 아니면 선 그리기 */}\n            {idx < profiles.length - 1 && (\n              <div\n                className=\"flex-1 h-1 bg-cyan-400 shadow-[0_0_10px_0_rgba(0,255,255,0.7)]\"\n                aria-hidden=\"true\"\n              />\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n\n      {/* 이름 행: 이미지 바로 아래, 같은 64px 영역 */}\n      <div className=\"flex items-start w-full mt-2\">\n        {profiles.map((profile, idx) => (\n          <React.Fragment key={profile.name}>\n            <Link\n              href={`/profile`}\n              className=\"w-16 hover:underline text-center text-white/95 text-lg\"\n            >\n              <span className=\"\">{profile.name}</span>\n            </Link>\n            {idx < profiles.length - 1 && (\n              <div className=\"flex-1\" aria-hidden />\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Soulline;\n","import React from \"react\";\nimport { BookMdQuestion } from \"./book\";\n\ninterface AnswerSimpleProps {\n  answer: {\n    title: string;\n    answer_text: string;\n  };\n  formattedDate: string;\n}\n\nconst AnswerSimple: React.FC<AnswerSimpleProps> = ({\n  answer,\n  formattedDate,\n}) => {\n  return (\n    <>\n      <h2 className=\"text-4xl font-semibold text-white/95 mb-8\">\n        {answer.title}\n      </h2>\n      <p className=\"text-xl text-white/95 mb-4 leading-relaxed whitespace-pre-line\">\n        {answer.answer_text}\n      </p>\n\n      <div className=\"flex justify-between items-center ml-[-4px]\">\n        {/* Left: Favorite Button with Tooltip */}\n        <div className=\"relative\"></div>\n\n        {/* Right: Date */}\n        <p className=\"text-base text-white/60\">{formattedDate}</p>\n      </div>\n    </>\n  );\n};\n\ninterface AnswerProps {\n  answer: {\n    title: string;\n    answer_text: string;\n  };\n  book: {\n    imageUrl: string;\n    title: string;\n    altText?: string;\n  };\n  questionText: string;\n  formattedDate: string;\n}\n\nconst Answer: React.FC<AnswerProps> = ({\n  answer,\n  book,\n  questionText,\n  formattedDate,\n}) => {\n  return (\n    <>\n      <h2 className=\"text-4xl font-semibold text-white/95 mb-6\">\n        {answer.title}\n      </h2>\n\n      <BookMdQuestion\n        imageUrl={book.imageUrl}\n        title={book.title}\n        question={questionText}\n        altText={book.altText}\n      />\n\n      <p className=\"text-xl text-white/95 mt-6 mb-4 leading-relaxed whitespace-pre-line\">\n        {answer.answer_text}\n      </p>\n\n      <div className=\"flex justify-between items-center ml-[-4px]\">\n        <div className=\"relative\"></div>\n\n        <p className=\"text-base text-white/60\">{formattedDate}</p>\n      </div>\n    </>\n  );\n};\n\nexport default AnswerSimple;\n\nexport { Answer };\n"],"mappings":"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","names":["jsx","jsxs","useState","jsx","jsxs","Image","jsx","jsxs","Image","Link","jsx","jsxs","jsx","jsxs","Image","Link","jsx","jsxs","jsx","jsxs","jsxs","jsx"]}